/*General CSS*/
* {
	box-sizing: border-box; /*ensures all elements pad on the inside*/
}
html {
	min-height: 100%;
}
body {
	background: linear-gradient(to bottom, #FFD700, #FFA500) no-repeat bottom;
	font-family: 'Roboto', sans-serif;
	color: black;
	margin: 0px;
}
h1, h3 {
	text-align: center;
	font-weight: normal;
}


/*Header CSS*/
#siteHeader {
	color: white;
	font-size: 16px;
	min-height: 50px;
}
#siteHeader .md-button.icon {
	min-width: 50px;
}
#siteHeader .md-button.icon img {
	max-width: 25px;
	max-height: 25px;
}


/*Animation CSS*/
@keyframes enter {
	from{opacity: 0;}
	to{opacity: 1;}
}
@keyframes exit {
	from{opacity: 1;}
	to{opacity: 0;}
}
*.ng-enter, *.ng-show {
	animation-name: enter;
	animation-duration: 1s;
}
*.ng-leave, *.ng-hide {
	animation-name: exit;
	animation-duration: 0.5s;
}



/*Input CSS (including some button stuff)*/
select[white], input[white], textarea[white] {
	border: 1px solid #ccc;
    border-radius: 4px;
    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.15), 3px 3px 10px rgba(0, 0, 0, 0.1);
    margin: 8px 0;
    padding: 5px 5px;
    transition-duration: .4s;
}
select[black], input[black], textarea[black] {
	background-color: rgba(201, 76, 76, 0);
	box-shadow: none;
	border: none;
	border-bottom: solid 2px black;
	border-radius: 0px;
	color: black;
	outline: none;
}
select[big], md-select[big], input[big], textarea[big], button[big] {
	display: inline-block;
	width: 100%;
	padding: 12px 20px;
}

input:focus, select:focus, textarea:focus, button:focus {
	outline: none;
}
input[white]:focus, select[white]:focus, textarea[white]:focus {
	box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.4), 5px 5px 20px rgba(0, 0, 0, 0.3);
}

select {
	cursor: pointer;
}
md-select {
	color: black;
}
md-switch {
	position: absolute;
	left: 50%;
	transform: translate(-50%, 0%);
	margin: 0;
}


/*Form validation CSS*/
.inputWrapper {
	position: relative;
	display: inline-block;
}
.inputWrapperBig {
	position: relative;
	display: inline-block;
	width: 100%;
}
.invalidContainer {
	overflow: hidden;
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	pointer-events: none;
	margin: 8px 0;
	border-radius: 4px;
	transition-duration: .4s;
}
.invalid {
	border: 5px solid rgba(255, 0, 0, 0.5);
}
.errorText {
	color: red;
	animation: none;
}
.successText {
	color: blue;
	animation: none;
}



/*Button CSS, including ripple and press effects*/
button {
	background-color: gold;
	color: black;
	position: relative;
	margin: 0px 4px;
	padding: 16px 32px;
	font-size: 16px;
	cursor: pointer;
	transition-duration: .4s;
	border: none;
	border-radius: 4px;
	/*box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.15), 3px 3px 10px rgba(0, 0, 0, 0.1);*/
}
button:hover {
	background-color: #ffa801;
	/*color: white;*/
}
button[invis], .md-button[invis] {
	background: none;
	margin: 0px;
	padding: 8px;
	box-shadow: none;
}
button[invis]:hover, .md-button[invis]:hover {
	background-color: rgba(0, 0, 0, 0.15);
	color: black;
}
button[warn], .md-button[warn] {
	background-color: #FF5A5A;
	color: white;
}
button[warn]:hover, .md-button[warn]:hover {
	background-color: #C51A1A;
	color: white;
}
.md-button {
	margin: 0px;
	padding: 8px;
	text-transform: none;
	line-height: normal;
}
.md-button.md-raised {
	margin: 0px 4px;
	padding: 16px 32px;
	font-size: 16px;
}

#rippleContainer {
	overflow: hidden;
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	pointer-events: none;
}

#rippleCircle {
	position: absolute;
	height: 100px;
	width: 100px;
	transform-origin: 50% 50%;
	transform: scale(35, 35);
	border-radius: 50%;
	background: radial-gradient(rgba(0,0,0,0.05) 0%, rgba(0,0,0,0.5) 100%);
	opacity: 0;
	animation: rippleAnim 10s cubic-bezier(0.215, 0.61, 0.355, 1);
}

@keyframes rippleAnim {
	from { opacity: 1; transform: scale(0, 0); }
	to { opacity: 0; transform: scale(35, 35); }
}



/*Multi Column CSS*/
.columnContainer {
	overflow: hidden;
	width: 100%;
}
.column, .twoColumn, .threeColumn {
	position: relative;
	float: left;
}
.twoColumn {
	width: 50%;
	padding: 0px 20px;
}
.threeColumn {
	width: 33.33%;
	padding: 0px 20px;
}


/*Expandable Content*/
#expandableContainer {
	overflow-y: hidden;
	word-wrap: break-word;
	padding: 0px 10px;
	transition: all cubic-bezier(0.67, 0, 0.36, 1) 0.5s;
}
.collapsedContent {
	height: 0px;
	margin: 0px 10px;
}
.expandedContent {
	height: 200px; 		/*NOTE: RE-SPECIFY THE CONTAINER HEIGHT FOR EACH INSTANCE OF EXPANDABLE CONTENT*/
	margin: 15px 10px;
}
